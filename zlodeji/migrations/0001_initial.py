# Generated by Django 2.0b1 on 2017-11-27 19:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Zlodej',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('prezivka', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('meno', models.CharField(max_length=30)),
                ('rc', models.CharField(max_length=11)),
                ('zivy', models.BooleanField(default=True)),
                ('odmena', models.IntegerField()),
                ('fotka', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BolNa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Dostal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Eviduje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Povolenie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doba_platnosti', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Rajon',
            fields=[
                ('nazov_rajonu', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('dlzka', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('sirka', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('pocet_obyvatelov', models.IntegerField()),
                ('kapacita_zlodejov', models.IntegerField()),
                ('bohatstvo', models.IntegerField()),
                ('level_rajonu', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Skolenie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_skoleni', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('schvalene', models.BooleanField(default=False)),
                ('poznamky', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='SkolenieVybavenia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_skolenia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Skolenie')),
            ],
        ),
        migrations.CreateModel(
            name='SkolenieZlocinu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_skolenia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Skolenie')),
            ],
        ),
        migrations.CreateModel(
            name='TypVybavenia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazov', models.CharField(max_length=20)),
                ('skolenie', models.ManyToManyField(through='zlodeji.SkolenieVybavenia', to='zlodeji.Skolenie')),
            ],
        ),
        migrations.CreateModel(
            name='TypZlocinu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('druh', models.CharField(max_length=20)),
                ('skolenie', models.ManyToManyField(through='zlodeji.SkolenieZlocinu', to='zlodeji.Skolenie')),
            ],
        ),
        migrations.CreateModel(
            name='Urobil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Vlastnil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('od', models.DateField()),
                ('do', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Vybavenie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meno', models.CharField(max_length=30)),
                ('priradene', models.BooleanField(default=False)),
                ('id_typu_vybavenia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.TypVybavenia')),
            ],
        ),
        migrations.CreateModel(
            name='Zlocin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hodnota_korist', models.IntegerField()),
                ('uspech', models.BooleanField(default=True)),
                ('id_typu_zlocinu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.TypZlocinu')),
            ],
        ),
        migrations.CreateModel(
            name='Lupeznik',
            fields=[
                ('zlodej', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pocet_zabitych', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Vydriduch',
            fields=[
                ('zlodej', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('peniaze', models.IntegerField()),
                ('provizia', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.AddField(
            model_name='zlocin',
            name='zlodej',
            field=models.ManyToManyField(through='zlodeji.Urobil', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vybavenie',
            name='zlodej',
            field=models.ManyToManyField(through='zlodeji.Vlastnil', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vlastnil',
            name='id_vybavenia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Vybavenie'),
        ),
        migrations.AddField(
            model_name='vlastnil',
            name='prezivka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urobil',
            name='id_zlocinu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Zlocin'),
        ),
        migrations.AddField(
            model_name='urobil',
            name='prezivka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='skoleniezlocinu',
            name='id_typu_zlocinu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.TypZlocinu'),
        ),
        migrations.AddField(
            model_name='skolenievybavenia',
            name='id_typu_vybavenia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.TypVybavenia'),
        ),
        migrations.AddField(
            model_name='skolenie',
            name='zlodej',
            field=models.ManyToManyField(through='zlodeji.BolNa', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rajon',
            name='zlodej',
            field=models.ManyToManyField(through='zlodeji.Eviduje', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='povolenie',
            name='id_zlocinu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Zlocin'),
        ),
        migrations.AddField(
            model_name='povolenie',
            name='nazov_rajonu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Rajon'),
        ),
        migrations.AddField(
            model_name='povolenie',
            name='zlodej',
            field=models.ManyToManyField(through='zlodeji.Dostal', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eviduje',
            name='nazov_rajonu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Rajon'),
        ),
        migrations.AddField(
            model_name='eviduje',
            name='prezivka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dostal',
            name='id_povolenia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Povolenie'),
        ),
        migrations.AddField(
            model_name='dostal',
            name='prezivka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bolna',
            name='id_skolenia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zlodeji.Skolenie'),
        ),
        migrations.AddField(
            model_name='bolna',
            name='prezivka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='zlodej',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='zlodej',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
